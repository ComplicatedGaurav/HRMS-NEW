{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\panka\\\\Downloads\\\\Human-Resource-management-master\\\\client\\\\src\\\\components\\\\layouts\\\\Admin\\\\Stats\\\\LineChart.jsx\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nexport default class LineChart extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = async () => {\n      axios.get(\"/api/admin/getEmpList\").then(empList => {\n        this.setState({\n          empList: empList.data\n        }, () => {\n          this.onPopulateLineChart();\n        });\n      });\n    };\n\n    this.onPopulateLineChart = () => {\n      let empCountDict = {};\n      this.state.empList.forEach(emp => {\n        const d = new Date(emp.doj);\n\n        if (!empCountDict[d.getFullYear()]) {\n          empCountDict[d.getFullYear()] = 1;\n        } else {\n          empCountDict[d.getFullYear()]++;\n        }\n      });\n      console.log(\"emp count year wise\", empCountDict);\n      let datasets = this.state.datasets;\n      let labels = [];\n      let data = [];\n\n      for (const property in empCountDict) {\n        labels.push(property);\n        data.push(empCountDict[property]);\n      }\n\n      datasets[0].data = data;\n      this.setState({\n        datasets,\n        labels\n      });\n    };\n\n    this.state = {\n      empList: [],\n      labels: [],\n      //x axis\n      datasets: [{\n        label: \"Hired\",\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: \"white\",\n        borderColor: \"#02C39A\",\n        borderWidth: 2,\n        data: [] //y axis\n\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chartContainer\",\n      style: {\n        height: \"250px\",\n        padding: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: this.state,\n        options: {\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          },\n          title: {\n            display: true,\n            text: \"No. of Employees hired\",\n            position: \"bottom\",\n            fontSize: 20\n          },\n          legend: {\n            display: true,\n            position: \"right\"\n          },\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/panka/Downloads/Human-Resource-management-master/client/src/components/layouts/Admin/Stats/LineChart.jsx"],"names":["axios","React","Component","Line","LineChart","constructor","componentDidMount","get","then","empList","setState","data","onPopulateLineChart","empCountDict","state","forEach","emp","d","Date","doj","getFullYear","console","log","datasets","labels","property","push","label","fill","lineTension","backgroundColor","borderColor","borderWidth","render","height","padding","scales","yAxes","ticks","beginAtZero","title","display","text","position","fontSize","legend","maintainAspectRatio"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nexport default class LineChart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      empList: [],\n\n      labels: [], //x axis\n      datasets: [\n        {\n          label: \"Hired\",\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: \"white\",\n          borderColor: \"#02C39A\",\n          borderWidth: 2,\n          data: [], //y axis\n        },\n      ],\n    };\n  }\n\n  componentDidMount = async () => {\n    axios.get(\"/api/admin/getEmpList\").then((empList) => {\n      this.setState({ empList: empList.data }, () => {\n        this.onPopulateLineChart();\n      });\n    });\n  };\n\n  onPopulateLineChart = () => {\n    let empCountDict = {};\n\n    this.state.empList.forEach((emp) => {\n      const d = new Date(emp.doj);\n      if (!empCountDict[d.getFullYear()]) {\n        empCountDict[d.getFullYear()] = 1;\n      } else {\n        empCountDict[d.getFullYear()]++;\n      }\n    });\n\n    console.log(\"emp count year wise\", empCountDict);\n\n    let datasets = this.state.datasets;\n    let labels = [];\n    let data = [];\n\n    for (const property in empCountDict) {\n      labels.push(property);\n      data.push(empCountDict[property]);\n    }\n\n    datasets[0].data = data;\n\n    this.setState({ datasets, labels });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"chartContainer\"\n        style={{ height: \"250px\", padding: \"10px\" }}\n      >\n        <Line\n          data={this.state}\n          options={{\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    beginAtZero: true,\n                  },\n                },\n              ],\n            },\n            title: {\n              display: true,\n              text: \"No. of Employees hired\",\n              position: \"bottom\",\n              fontSize: 20,\n            },\n            legend: {\n              display: true,\n              position: \"right\",\n            },\n            maintainAspectRatio: false,\n          }}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
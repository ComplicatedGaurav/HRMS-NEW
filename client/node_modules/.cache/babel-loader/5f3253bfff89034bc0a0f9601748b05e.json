{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\panka\\\\Downloads\\\\Human-Resource-management-master\\\\client\\\\src\\\\components\\\\layouts\\\\Admin\\\\Stats\\\\BarChart.jsx\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nexport default class BarChart extends Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = async () => {\n      axios.get(\"/api/admin/getEmpList\").then(empList => {\n        this.setState({\n          empList: empList.data\n        }, () => {\n          this.onPopulateBarChart();\n        });\n      });\n    };\n\n    this.onPopulateBarChart = () => {\n      //   no of emp per team\n      let teamDict = {};\n      this.state.empList.forEach(emp => {\n        if (!teamDict[emp.team]) {\n          teamDict[emp.team] = 1;\n        } else {\n          teamDict[emp.team]++;\n        }\n      });\n      console.log(\"taem dict: \", teamDict);\n      let datasets = this.state.datasets;\n      let labels = [];\n      let data = [];\n\n      for (const property in teamDict) {\n        labels.push(property);\n        data.push(teamDict[property]);\n      }\n\n      console.log(data);\n      datasets[0].data = data;\n      this.setState({\n        datasets,\n        labels\n      });\n    };\n\n    this.state = {\n      empList: [],\n      labels: [],\n      datasets: [{\n        label: \"emp count\",\n        backgroundColor: \"#b3d1ff\",\n        borderColor: \"#0066ff\",\n        borderWidth: 2,\n        data: []\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chartContainer\",\n      style: {\n        height: \"250px\",\n        padding: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: this.state,\n        options: {\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          },\n          title: {\n            display: true,\n            text: \"No. of employees per team\",\n            fontSize: 20,\n            position: \"bottom\"\n          },\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/panka/Downloads/Human-Resource-management-master/client/src/components/layouts/Admin/Stats/BarChart.jsx"],"names":["axios","React","Component","Bar","BarChart","constructor","componentDidMount","get","then","empList","setState","data","onPopulateBarChart","teamDict","state","forEach","emp","team","console","log","datasets","labels","property","push","label","backgroundColor","borderColor","borderWidth","render","height","padding","scales","yAxes","ticks","beginAtZero","title","display","text","fontSize","position","maintainAspectRatio"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC9CG,EAAAA,WAAW,GAAG;AACZ;;AADY,SAkBdC,iBAlBc,GAkBM,YAAY;AAC9BN,MAAAA,KAAK,CAACO,GAAN,CAAU,uBAAV,EAAmCC,IAAnC,CAAyCC,OAAD,IAAa;AACnD,aAAKC,QAAL,CAAc;AAAED,UAAAA,OAAO,EAAEA,OAAO,CAACE;AAAnB,SAAd,EAAyC,MAAM;AAC7C,eAAKC,kBAAL;AACD,SAFD;AAGD,OAJD;AAKD,KAxBa;;AAAA,SA0BdA,kBA1Bc,GA0BO,MAAM;AACzB;AACA,UAAIC,QAAQ,GAAG,EAAf;AAEA,WAAKC,KAAL,CAAWL,OAAX,CAAmBM,OAAnB,CAA4BC,GAAD,IAAS;AAClC,YAAI,CAACH,QAAQ,CAACG,GAAG,CAACC,IAAL,CAAb,EAAyB;AACvBJ,UAAAA,QAAQ,CAACG,GAAG,CAACC,IAAL,CAAR,GAAqB,CAArB;AACD,SAFD,MAEO;AACLJ,UAAAA,QAAQ,CAACG,GAAG,CAACC,IAAL,CAAR;AACD;AACF,OAND;AAQAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BN,QAA3B;AAEA,UAAIO,QAAQ,GAAG,KAAKN,KAAL,CAAWM,QAA1B;AACA,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIV,IAAI,GAAG,EAAX;;AAEA,WAAK,MAAMW,QAAX,IAAuBT,QAAvB,EAAiC;AAC/BQ,QAAAA,MAAM,CAACE,IAAP,CAAYD,QAAZ;AACAX,QAAAA,IAAI,CAACY,IAAL,CAAUV,QAAQ,CAACS,QAAD,CAAlB;AACD;;AAEDJ,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AAEAS,MAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYT,IAAZ,GAAmBA,IAAnB;AAEA,WAAKD,QAAL,CAAc;AAAEU,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAAd;AACD,KAtDa;;AAGZ,SAAKP,KAAL,GAAa;AACXL,MAAAA,OAAO,EAAE,EADE;AAEXY,MAAAA,MAAM,EAAE,EAFG;AAGXD,MAAAA,QAAQ,EAAE,CACR;AACEI,QAAAA,KAAK,EAAE,WADT;AAEEC,QAAAA,eAAe,EAAE,SAFnB;AAGEC,QAAAA,WAAW,EAAE,SAHf;AAIEC,QAAAA,WAAW,EAAE,CAJf;AAKEhB,QAAAA,IAAI,EAAE;AALR,OADQ;AAHC,KAAb;AAaD;;AAwCDiB,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAC,gBADZ;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,OAAO,EAAE;AAA5B,OAFT;AAAA,6BAIE,QAAC,GAAD;AACE,QAAA,IAAI,EAAE,KAAKhB,KADb;AAEE,QAAA,OAAO,EAAE;AACPiB,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,CACL;AACEC,cAAAA,KAAK,EAAE;AACLC,gBAAAA,WAAW,EAAE;AADR;AADT,aADK;AADD,WADD;AAUPC,UAAAA,KAAK,EAAE;AACLC,YAAAA,OAAO,EAAE,IADJ;AAELC,YAAAA,IAAI,EAAE,2BAFD;AAGLC,YAAAA,QAAQ,EAAE,EAHL;AAILC,YAAAA,QAAQ,EAAE;AAJL,WAVA;AAgBPC,UAAAA,mBAAmB,EAAE;AAhBd;AAFX;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;;AAtF6C","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nexport default class BarChart extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      empList: [],\n      labels: [],\n      datasets: [\n        {\n          label: \"emp count\",\n          backgroundColor: \"#b3d1ff\",\n          borderColor: \"#0066ff\",\n          borderWidth: 2,\n          data: [],\n        },\n      ],\n    };\n  }\n\n  componentDidMount = async () => {\n    axios.get(\"/api/admin/getEmpList\").then((empList) => {\n      this.setState({ empList: empList.data }, () => {\n        this.onPopulateBarChart();\n      });\n    });\n  };\n\n  onPopulateBarChart = () => {\n    //   no of emp per team\n    let teamDict = {};\n\n    this.state.empList.forEach((emp) => {\n      if (!teamDict[emp.team]) {\n        teamDict[emp.team] = 1;\n      } else {\n        teamDict[emp.team]++;\n      }\n    });\n\n    console.log(\"taem dict: \", teamDict);\n\n    let datasets = this.state.datasets;\n    let labels = [];\n    let data = [];\n\n    for (const property in teamDict) {\n      labels.push(property);\n      data.push(teamDict[property]);\n    }\n\n    console.log(data);\n\n    datasets[0].data = data;\n\n    this.setState({ datasets, labels });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"chartContainer\"\n        style={{ height: \"250px\", padding: \"10px\" }}\n      >\n        <Bar\n          data={this.state}\n          options={{\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    beginAtZero: true,\n                  },\n                },\n              ],\n            },\n            title: {\n              display: true,\n              text: \"No. of employees per team\",\n              fontSize: 20,\n              position: \"bottom\",\n            },\n            maintainAspectRatio: false,\n          }}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\panka\\\\Downloads\\\\Human-Resource-management-master\\\\client\\\\src\\\\components\\\\layouts\\\\Admin\\\\Payroll.jsx\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport AdminSidePanel from \"./AdminSidePanel\";\nimport \"../../../assets/payroll/payroll.css\";\nimport emptyImg from \"../../../assets/payroll/empty.png\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport toast from \"toasted-notes\";\nimport \"toasted-notes/src/styles.css\";\nimport { Consumer } from \"../../../context\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Spring } from \"react-spring/renderprops\";\nexport default class Payroll extends Component {\n  constructor() {\n    super();\n\n    this.onMonthClick = async month => {\n      const empSalReceipts = await axios.get(\"/api/admin/getAllEmpsSalReceipt\");\n      console.log(empSalReceipts.data);\n      let monthlyData = [];\n      empSalReceipts.data.forEach(emp => {\n        let eachEmp = {\n          currentSalary: emp.currentSalary,\n          empId: emp.empId\n        };\n        eachEmp[\"empName\"] = emp.empName;\n        emp.monthlyReceipts.forEach(m => {\n          eachEmp[m.month] = m;\n        });\n        monthlyData.push(eachEmp);\n      });\n      this.setState({\n        selectedMonth: month,\n        empReceiptsList: monthlyData\n      });\n    };\n\n    this.onCheckReceiptGenerated = monthlyReceipts => {\n      for (let i = 0; i < monthlyReceipts.length; i++) {\n        let curMonth = monthlyReceipts[i];\n        if (curMonth.month === this.state.selectedMonth) return true;\n      }\n\n      return false;\n    };\n\n    this.onGenerateSalReceipt = async emp => {\n      try {\n        // 1. get sal details\n        const salDetails = await axios.get(`/api/admin/getUserSalDetails/${emp.empId}`);\n        const res = await axios.put(\"/api/admin/generateSalReceipt\", {\n          empId: emp.empId,\n          month: this.state.selectedMonth,\n          year: this.curYear,\n          salDetails: salDetails.data\n        });\n        const updatedEmpReceiptDoc = res.data.updatedEmpReceiptDoc;\n        let empReceiptsList = this.state.empReceiptsList;\n        empReceiptsList.forEach(emp => {\n          if (emp.empId === updatedEmpReceiptDoc.empId) {\n            const newReceipt = updatedEmpReceiptDoc.monthlyReceipts[updatedEmpReceiptDoc.monthlyReceipts.length - 1];\n            empReceiptsList.forEach(stateEmp => {\n              if (stateEmp.empId === emp.empId) {\n                stateEmp[this.state.selectedMonth] = newReceipt;\n              }\n            });\n          }\n        });\n        this.setState({\n          empReceiptsList\n        });\n        toast.notify(\"Salary Receipt generated successfully\", {\n          position: \"top-right\"\n        });\n        console.log(\"generated payslip successfully: \", res.data);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.state = {\n      selectedMonth: \"Select Month\",\n      empReceiptsList: []\n    };\n    this.curYear = new Date().getFullYear();\n    this.month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Consumer, {\n      children: value => {\n        let {\n          user\n        } = value;\n        const token = localStorage.getItem(\"auth-token\");\n        if (!token) return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 30\n        }, this);\n        if (user && user.role !== \"admin\") return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/empDashBoard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 20\n        }, this);\n        return /*#__PURE__*/_jsxDEV(Spring, {\n          from: {\n            opacity: 0\n          },\n          to: {\n            opacity: 1\n          },\n          config: {\n            duration: 300\n          },\n          children: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row m-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-2 p-0 leftPart\",\n                children: /*#__PURE__*/_jsxDEV(AdminSidePanel, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col mt-3\",\n                style: props,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dropdown\",\n                    style: {\n                      float: \"left\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-primary dropdown-toggle\",\n                      type: \"button\",\n                      id: \"dropdownMenuButton\",\n                      \"data-toggle\": \"dropdown\",\n                      \"aria-haspopup\": \"true\",\n                      \"aria-expanded\": \"false\",\n                      children: this.state.selectedMonth\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"dropdown-menu\",\n                      \"aria-labelledby\": \"dropdownMenuButton\",\n                      children: this.month.map(m => {\n                        return /*#__PURE__*/_jsxDEV(\"li\", {\n                          style: {\n                            cursor: \"pointer\"\n                          },\n                          className: \"dropdown-item btn-primary\",\n                          onClick: () => this.onMonthClick(m),\n                          children: m\n                        }, m, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 160,\n                          columnNumber: 33\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 25\n                  }, this), this.state.selectedMonth !== \"Select Month\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                      className: \"my-3 text-right text-secondary\",\n                      children: [\"Payroll table for \", this.state.selectedMonth, \",\", \" \", this.curYear]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n                      place: \"bottom\",\n                      delayShow: 100,\n                      html: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                      className: \"table table-hover table-border text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                            scope: \"col\",\n                            children: \"#\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 189,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            scope: \"col\",\n                            children: \"Name\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 190,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            scope: \"col\",\n                            children: \"Salary\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 191,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            scope: \"col\",\n                            children: \"Status\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 192,\n                            columnNumber: 35\n                          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                            scope: \"col\",\n                            children: [\"Action\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                              className: \"fas fa-info-circle text-secondary\",\n                              \"data-tip\": \"Once salary slip is generated, <br /> bonus, total leaves of that employee will be cleared\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 195,\n                              columnNumber: 37\n                            }, this), \" \"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 193,\n                            columnNumber: 35\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 188,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        children: this.state.empReceiptsList.map((emp, index) => {\n                          return /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                              scope: \"row\",\n                              children: index + 1\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 207,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: emp.empName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 208,\n                              columnNumber: 41\n                            }, this), emp[this.state.selectedMonth] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                children: emp[this.state.selectedMonth].salDetails.salary\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 211,\n                                columnNumber: 45\n                              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                children: \"Generated\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 217,\n                                columnNumber: 45\n                              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                                  type: \"button\",\n                                  className: \"btn btn-success\",\n                                  value: \"Receipt Generated\",\n                                  disabled: true\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 219,\n                                  columnNumber: 47\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 218,\n                                columnNumber: 45\n                              }, this)]\n                            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                children: emp.currentSalary\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 229,\n                                columnNumber: 45\n                              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                children: \"Pending\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 230,\n                                columnNumber: 45\n                              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                  className: \"dropdown\",\n                                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                                    className: \"btn btn-primary dropdown-toggle\",\n                                    type: \"button\",\n                                    id: \"dropdownMenuButton\",\n                                    \"data-toggle\": \"dropdown\",\n                                    \"aria-haspopup\": \"true\",\n                                    \"aria-expanded\": \"false\",\n                                    children: \"Take action\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 233,\n                                    columnNumber: 49\n                                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                    className: \"dropdown-menu\",\n                                    \"aria-labelledby\": \"dropdownMenuButton\",\n                                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                                      style: {\n                                        cursor: \"pointer\"\n                                      },\n                                      className: \"dropdown-item btn-primary\",\n                                      onClick: () => this.onGenerateSalReceipt(emp),\n                                      children: \"Generate Receipt\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 247,\n                                      columnNumber: 51\n                                    }, this), /*#__PURE__*/_jsxDEV(Link, {\n                                      to: `/editEmpProfile/${emp.empId}`,\n                                      style: {\n                                        textDecoration: \"none\"\n                                      },\n                                      children: /*#__PURE__*/_jsxDEV(\"li\", {\n                                        className: \"dropdown-item\",\n                                        children: \"View profile/Edit salary details\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 266,\n                                        columnNumber: 53\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 260,\n                                      columnNumber: 51\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 243,\n                                    columnNumber: 49\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 232,\n                                  columnNumber: 47\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 231,\n                                columnNumber: 45\n                              }, this)]\n                            }, void 0, true)]\n                          }, index, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 206,\n                            columnNumber: 39\n                          }, this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                      className: \"text-center mt-3 emptyPicText text-secondary\",\n                      children: /*#__PURE__*/_jsxDEV(\"b\", {\n                        children: \"Select month to view details\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 286,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"center\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"emptyPic\",\n                        src: emptyImg,\n                        alt: \"login.svg\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 295,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/panka/Downloads/Human-Resource-management-master/client/src/components/layouts/Admin/Payroll.jsx"],"names":["axios","React","Component","AdminSidePanel","emptyImg","Link","Redirect","toast","Consumer","ReactTooltip","Spring","Payroll","constructor","onMonthClick","month","empSalReceipts","get","console","log","data","monthlyData","forEach","emp","eachEmp","currentSalary","empId","empName","monthlyReceipts","m","push","setState","selectedMonth","empReceiptsList","onCheckReceiptGenerated","i","length","curMonth","state","onGenerateSalReceipt","salDetails","res","put","year","curYear","updatedEmpReceiptDoc","newReceipt","stateEmp","notify","position","e","Date","getFullYear","render","value","user","token","localStorage","getItem","role","opacity","duration","props","float","map","cursor","index","salary","textDecoration","display","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport AdminSidePanel from \"./AdminSidePanel\";\nimport \"../../../assets/payroll/payroll.css\";\nimport emptyImg from \"../../../assets/payroll/empty.png\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport toast from \"toasted-notes\";\nimport \"toasted-notes/src/styles.css\";\nimport { Consumer } from \"../../../context\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Spring } from \"react-spring/renderprops\";\n\nexport default class Payroll extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      selectedMonth: \"Select Month\",\n      empReceiptsList: [],\n    };\n\n    this.curYear = new Date().getFullYear();\n\n    this.month = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n  }\n\n  onMonthClick = async (month) => {\n    const empSalReceipts = await axios.get(\"/api/admin/getAllEmpsSalReceipt\");\n    console.log(empSalReceipts.data);\n    let monthlyData = [];\n\n    empSalReceipts.data.forEach((emp) => {\n      let eachEmp = {\n        currentSalary: emp.currentSalary,\n        empId: emp.empId,\n      };\n      eachEmp[\"empName\"] = emp.empName;\n      emp.monthlyReceipts.forEach((m) => {\n        eachEmp[m.month] = m;\n      });\n      monthlyData.push(eachEmp);\n    });\n\n    this.setState({\n      selectedMonth: month,\n      empReceiptsList: monthlyData,\n    });\n  };\n\n  onCheckReceiptGenerated = (monthlyReceipts) => {\n    for (let i = 0; i < monthlyReceipts.length; i++) {\n      let curMonth = monthlyReceipts[i];\n      if (curMonth.month === this.state.selectedMonth) return true;\n    }\n    return false;\n  };\n\n  onGenerateSalReceipt = async (emp) => {\n    try {\n      // 1. get sal details\n      const salDetails = await axios.get(\n        `/api/admin/getUserSalDetails/${emp.empId}`\n      );\n      const res = await axios.put(\"/api/admin/generateSalReceipt\", {\n        empId: emp.empId,\n        month: this.state.selectedMonth,\n        year: this.curYear,\n        salDetails: salDetails.data,\n      });\n\n      const updatedEmpReceiptDoc = res.data.updatedEmpReceiptDoc;\n\n      let empReceiptsList = this.state.empReceiptsList;\n      empReceiptsList.forEach((emp) => {\n        if (emp.empId === updatedEmpReceiptDoc.empId) {\n          const newReceipt =\n            updatedEmpReceiptDoc.monthlyReceipts[\n              updatedEmpReceiptDoc.monthlyReceipts.length - 1\n            ];\n\n          empReceiptsList.forEach((stateEmp) => {\n            if (stateEmp.empId === emp.empId) {\n              stateEmp[this.state.selectedMonth] = newReceipt;\n            }\n          });\n        }\n      });\n\n      this.setState({ empReceiptsList });\n\n      toast.notify(\"Salary Receipt generated successfully\", {\n        position: \"top-right\",\n      });\n\n      console.log(\"generated payslip successfully: \", res.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  render() {\n    return (\n      <Consumer>\n        {(value) => {\n          let { user } = value;\n\n          const token = localStorage.getItem(\"auth-token\");\n\n          if (!token) return <Redirect to=\"/login\" />;\n          if (user && user.role !== \"admin\")\n            return <Redirect to=\"/empDashBoard\" />;\n          return (\n            <Spring\n              from={{ opacity: 0 }}\n              to={{ opacity: 1 }}\n              config={{ duration: 300 }}\n            >\n              {(props) => (\n                <>\n                  <div className=\"row m-0\">\n                    {/* left part */}\n                    <div className=\"col-2 p-0 leftPart\">\n                      <AdminSidePanel />\n                    </div>\n\n                    {/* right part */}\n                    <div className=\"col mt-3\" style={props}>\n                      <div className=\"container\">\n                        {/* select month */}\n                        <div className=\"dropdown\" style={{ float: \"left\" }}>\n                          <button\n                            className=\"btn btn-primary dropdown-toggle\"\n                            type=\"button\"\n                            id=\"dropdownMenuButton\"\n                            data-toggle=\"dropdown\"\n                            aria-haspopup=\"true\"\n                            aria-expanded=\"false\"\n                          >\n                            {this.state.selectedMonth}\n                          </button>\n                          <div\n                            className=\"dropdown-menu\"\n                            aria-labelledby=\"dropdownMenuButton\"\n                          >\n                            {this.month.map((m) => {\n                              return (\n                                <li\n                                  style={{ cursor: \"pointer\" }}\n                                  key={m}\n                                  className=\"dropdown-item btn-primary\"\n                                  onClick={() => this.onMonthClick(m)}\n                                >\n                                  {m}\n                                </li>\n                              );\n                            })}\n                          </div>\n                        </div>\n\n                        {this.state.selectedMonth !== \"Select Month\" ? (\n                          <>\n                            <h1 className=\"my-3 text-right text-secondary\">\n                              Payroll table for {this.state.selectedMonth},{\" \"}\n                              {this.curYear}\n                            </h1>\n\n                            <ReactTooltip\n                              place=\"bottom\"\n                              delayShow={100}\n                              html={true}\n                            />\n\n                            <table className=\"table table-hover table-border text-center\">\n                              <thead>\n                                <tr>\n                                  <th scope=\"col\">#</th>\n                                  <th scope=\"col\">Name</th>\n                                  <th scope=\"col\">Salary</th>\n                                  <th scope=\"col\">Status</th>\n                                  <th scope=\"col\">\n                                    Action{\" \"}\n                                    <i\n                                      className=\"fas fa-info-circle text-secondary\"\n                                      data-tip=\"Once salary slip is generated, <br /> bonus, total leaves of that employee will be cleared\"\n                                    ></i>{\" \"}\n                                  </th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {this.state.empReceiptsList.map(\n                                  (emp, index) => {\n                                    return (\n                                      <tr key={index}>\n                                        <th scope=\"row\">{index + 1}</th>\n                                        <td>{emp.empName}</td>\n                                        {emp[this.state.selectedMonth] ? (\n                                          <>\n                                            <td>\n                                              {\n                                                emp[this.state.selectedMonth]\n                                                  .salDetails.salary\n                                              }\n                                            </td>\n                                            <td>Generated</td>\n                                            <td>\n                                              <input\n                                                type=\"button\"\n                                                className=\"btn btn-success\"\n                                                value=\"Receipt Generated\"\n                                                disabled={true}\n                                              />\n                                            </td>\n                                          </>\n                                        ) : (\n                                          <>\n                                            <td>{emp.currentSalary}</td>\n                                            <td>Pending</td>\n                                            <td>\n                                              <div className=\"dropdown\">\n                                                <button\n                                                  className=\"btn btn-primary dropdown-toggle\"\n                                                  type=\"button\"\n                                                  id=\"dropdownMenuButton\"\n                                                  data-toggle=\"dropdown\"\n                                                  aria-haspopup=\"true\"\n                                                  aria-expanded=\"false\"\n                                                >\n                                                  Take action\n                                                </button>\n                                                <div\n                                                  className=\"dropdown-menu\"\n                                                  aria-labelledby=\"dropdownMenuButton\"\n                                                >\n                                                  <li\n                                                    style={{\n                                                      cursor: \"pointer\",\n                                                    }}\n                                                    className=\"dropdown-item btn-primary\"\n                                                    onClick={() =>\n                                                      this.onGenerateSalReceipt(\n                                                        emp\n                                                      )\n                                                    }\n                                                  >\n                                                    Generate Receipt\n                                                  </li>\n                                                  <Link\n                                                    to={`/editEmpProfile/${emp.empId}`}\n                                                    style={{\n                                                      textDecoration: \"none\",\n                                                    }}\n                                                  >\n                                                    <li className=\"dropdown-item\">\n                                                      View profile/Edit salary\n                                                      details\n                                                    </li>\n                                                  </Link>\n                                                </div>\n                                              </div>\n                                            </td>\n                                          </>\n                                        )}\n                                      </tr>\n                                    );\n                                  }\n                                )}\n                              </tbody>\n                            </table>\n                          </>\n                        ) : (\n                          <>\n                            <h2 className=\"text-center mt-3 emptyPicText text-secondary\">\n                              <b>Select month to view details</b>\n                            </h2>\n                            <div\n                              style={{\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                justifyContent: \"center\",\n                              }}\n                            >\n                              <img\n                                className=\"emptyPic\"\n                                src={emptyImg}\n                                alt=\"login.svg\"\n                              />\n                            </div>\n                          </>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </>\n              )}\n            </Spring>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}